{
  "openapi": "3.0.3",
  "info": {
    "title": "ePharmacy",
    "summary": "API for managing pharmacy operations and inventory",
    "description": "The ePharmacy API is designed to facilitate the management of key pharmacy operations, including user management, supplier management, product management, and order processing. This API provides comprehensive endpoints to streamline and automate pharmacy processes, ensuring efficient and accurate management of pharmaceutical products and related business operations.",
    "termsOfService": "http://swagger.io/terms/",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://e-pharmacy-0e2p.onrender.com",
      "description": "Production server"
    },
    {
      "url": "http://localhost:{port}/api",
      "description": "Development server",
      "variables": {
        "port": {
          "description": "this value is assigned by yourself in .env",
          "default": "3000"
        }
      }
    }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Operations related to user authentication and authorization"
    },
    {
      "name": "Suppliers",
      "description": "Operations related to suppliers management"
    }
  ],
  "paths": {
    "/user/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "Login user",
        "requestBody": {
          "description": "Login's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginUserRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (User successfully logged in)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginUserResponseSuccess"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request (Invalid login data)"
          },
          "401": {
            "description": "Unauthorized (Wrong credentials)"
          }
        }
      }
    },
    "/user/logout": {
      "get": {
        "tags": ["Auth"],
        "summary": "Logout user",
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "204": {
            "description": "No Content (User successfully logged out)"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/user/user-info": {
      "get": {
        "tags": ["Auth"],
        "summary": "Refresh (get) user info",
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": {
            "description": "OK (User data successfully refreshed)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RefreshUserResponseSuccess"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/user/refresh": {
      "get": {
        "tags": ["Auth"],
        "summary": "Refresh auth tokens (access and refresh)",
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": {
            "description": "OK (Auth tokens successfully refreshed)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RefreshAuthTokensResponseSuccess"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/suppliers": {
      "post": {
        "tags": ["Suppliers"],
        "summary": "Create new supplier",
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "description": "New supplier",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSupplierRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created (New supplier successfully created)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Supplier"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request (Invalid new supplier data)"
          },
          "401": {
            "description": "Unauthorized"
          },
          "409": {
            "description": "Conflict (Duplicate company)"
          }
        }
      },
      "get": {
        "tags": ["Suppliers"],
        "summary": "Get suppliers",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Number of page",
            "schema": {
              "type": "integer",
              "min": 1,
              "default": 1,
              "example": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Limit per page",
            "schema": {
              "type": "integer",
              "min": 1,
              "default": 5,
              "example": 5
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Supplier name",
            "schema": {
              "type": "string",
              "example": "Square"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK (Suppliers returned)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSuppliersResponseSuccess"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/suppliers/{supplierId}": {
      "put": {
        "tags": ["Suppliers"],
        "summary": "Update supplier by id",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "supplierId",
            "in": "path",
            "description": "Supplier id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "65e605a9403aaceab1749408"
            }
          }
        ],
        "requestBody": {
          "description": "Update supplier data",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSupplierRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (Supplier successfully updated)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Supplier"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request (Invalid id or supplier data)"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found (Supplier)"
          },
          "409": {
            "description": "Conflict (Duplicate company)"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "LoginUserRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "pattern": "/^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+.[a-zA-Z]{2,}$/",
            "example": "user@example.com",
            "description": "User's email"
          },
          "password": {
            "type": "string",
            "format": "password",
            "pattern": "/^(?=.*[a-z])(?=.*[A-Z])(?=.*d).{8,20}$/",
            "example": "Qwerty123",
            "description": "User's password"
          }
        }
      },
      "LoginUserResponseSuccess": {
        "type": "object",
        "properties": {
          "tokens": {
            "type": "object",
            "description": "Auth tokens",
            "properties": {
              "accessToken": {
                "type": "string",
                "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1ZTYwNWE5NDAzYWFjZWFiMTc0OTQwOCIsImlhdCI6MTcwOTU4MzExNiwiZXhwIjoxNzA5NTk3NTE2fQ.3LbFoM0av9dMOLYhbRzylNhwcW0SvAyMX_ONbQcT_hQ",
                "description": "User's auth access token"
              },
              "refreshToken": {
                "type": "string",
                "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1ZTYwNWE5NDAzYWFjZWFiMTc0OTQwOCIsImlhdCI6MTcwOTU4MzExNiwiZXhwIjoxNzA5NTk3NTE2fQ.3LbFoM0av9dMOLYhbRzylNhwcW0SvAyMX_ONbQcT_hQ",
                "description": "User's auth refresh token"
              }
            }
          },
          "user": {
            "type": "object",
            "description": "User's credentials",
            "properties": {
              "name": {
                "type": "string",
                "example": "Clayton Santos",
                "description": "User's name"
              },
              "email": {
                "type": "string",
                "format": "email",
                "example": "user@example.com",
                "description": "User's email"
              }
            }
          }
        }
      },
      "RefreshUserResponseSuccess": {
        "type": "object",
        "description": "User's credentials",
        "properties": {
          "name": {
            "type": "string",
            "example": "Clayton Santos",
            "description": "User's name"
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "user@example.com",
            "description": "User's email"
          }
        }
      },
      "RefreshAuthTokensResponseSuccess": {
        "type": "object",
        "description": "Auth tokens",
        "properties": {
          "accessToken": {
            "type": "string",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1ZTYwNWE5NDAzYWFjZWFiMTc0OTQwOCIsImlhdCI6MTcwOTU4MzExNiwiZXhwIjoxNzA5NTk3NTE2fQ.3LbFoM0av9dMOLYhbRzylNhwcW0SvAyMX_ONbQcT_hQ",
            "description": "User's auth access token"
          },
          "refreshToken": {
            "type": "string",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1ZTYwNWE5NDAzYWFjZWFiMTc0OTQwOCIsImlhdCI6MTcwOTU4MzExNiwiZXhwIjoxNzA5NTk3NTE2fQ.3LbFoM0av9dMOLYhbRzylNhwcW0SvAyMX_ONbQcT_hQ",
            "description": "User's auth refresh token"
          }
        }
      },
      "Supplier": {
        "type": "object",
        "description": "Supplier",
        "properties": {
          "name": {
            "type": "string",
            "example": "Allen Raymond",
            "description": "Supplier info"
          },
          "address": {
            "type": "string",
            "example": "Mripur-1",
            "description": "Supplier address"
          },
          "company": {
            "type": "string",
            "example": "Square",
            "description": "Supplier name"
          },
          "date": {
            "type": "string",
            "example": "September 19, 2024",
            "description": "Delivery date"
          },
          "amount": {
            "type": "number",
            "example": 12,
            "description": "Supplier amount"
          },
          "status": {
            "type": "string",
            "example": "Active",
            "description": "Supplier status"
          }
        }
      },
      "CreateSupplierRequest": {
        "type": "object",
        "description": "New supplier request",
        "required": ["name", "address", "company", "date", "amount", "status"],
        "properties": {
          "name": {
            "type": "string",
            "pattern": "/^[a-zA-Z0-9_- ]{3,30}$/",
            "example": "Allen Raymond",
            "description": "Supplier info"
          },
          "address": {
            "type": "string",
            "pattern": "/^[a-zA-Z0-9s,'-]+$/",
            "example": "Mripur-1",
            "description": "Supplier address"
          },
          "company": {
            "type": "string",
            "pattern": "/^[a-zA-Z0-9_- ]{3,30}$/",
            "example": "Square",
            "description": "Supplier name"
          },
          "date": {
            "type": "string",
            "example": "September 19, 2024",
            "description": "Delivery date"
          },
          "amount": {
            "type": "number",
            "minimum": 0.01,
            "example": 12,
            "description": "Supplier amount"
          },
          "status": {
            "type": "string",
            "enum": ["Active", "Deactive"],
            "example": "Active",
            "description": "Supplier status"
          }
        }
      },
      "GetSuppliersResponseSuccess": {
        "type": "object",
        "properties": {
          "paginatedResult": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Supplier"
            },
            "description": "Paginated suppliers list"
          },
          "totalCount": {
            "type": "number",
            "example": 2,
            "description": "Total suppliers quantity (by query params filters)"
          }
        }
      },
      "UpdateSupplierRequest": {
        "type": "object",
        "description": "Update supplier request",
        "required": ["name", "address", "company", "date", "amount", "status"],
        "properties": {
          "name": {
            "type": "string",
            "pattern": "/^[a-zA-Z0-9_- ]{3,30}$/",
            "example": "Allen Raymond",
            "description": "Supplier info"
          },
          "address": {
            "type": "string",
            "pattern": "/^[a-zA-Z0-9s,'-]+$/",
            "example": "Mripur-1",
            "description": "Supplier address"
          },
          "company": {
            "type": "string",
            "pattern": "/^[a-zA-Z0-9_- ]{3,30}$/",
            "example": "Square",
            "description": "Supplier name"
          },
          "date": {
            "type": "string",
            "example": "September 19, 2024",
            "description": "Delivery date"
          },
          "amount": {
            "type": "number",
            "minimum": 0.01,
            "example": 12,
            "description": "Supplier amount"
          },
          "status": {
            "type": "string",
            "enum": ["Active", "Deactive"],
            "example": "Active",
            "description": "Supplier status"
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
